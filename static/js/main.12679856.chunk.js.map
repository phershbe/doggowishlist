{"version":3,"sources":["App.js","index.js"],"names":["App","props","dogBreed","console","log","middleOfURL","state","data","message","slice","split","includes","name","setState","breed","changeDoggo","fetch","then","response","json","addDoggo","updatedList","list","currentDoggo","price","id","Math","random","concat","deleteDoggo","x","copiedList","filter","item","array","url","className","this","src","alt","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0PA6GeA,E,kDAzGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,SAAW,WACTC,QAAQC,IAAI,cACZ,IAEIC,EAFa,EAAKC,MAAMC,KAAKC,QAAQC,QACfA,MAAM,IACLC,MAAM,KAAK,GACtC,GAAIL,EAAYM,SAAS,KAAM,CAC7B,IAAIC,EAAOP,EAAYK,MAAM,KAC7BL,EAAcO,EAAK,GAAK,IAAMA,EAAK,GAErCT,QAAQC,IAAIC,GACZ,EAAKQ,SAAS,CAACC,MAAOT,KAtBL,EAmCnBU,YAAc,WACZC,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OACR,EAAKN,SAAS,CAACN,KAAMY,IAAO,kBAC3B,EAAKjB,kBAxCO,EA6CnBkB,SAAW,WACT,IAAMC,EAAW,YAAO,EAAKf,MAAMgB,MAE7BC,EAAe,CACnBT,MAAO,EAAKR,MAAMQ,MAClBU,MAAO,EAAKlB,MAAMkB,MAClBC,GAAI,EAAIC,KAAKC,UAEf,EAAKd,SAAS,CAACS,KAAMD,EAAYO,OAAOL,KACf,eAArB,EAAKjB,MAAMkB,MACb,EAAKX,SAAS,CAACW,MAAO,wBACQ,wBAArB,EAAKlB,MAAMkB,MACpB,EAAKX,SAAS,CAACW,MAAO,oBAEtB,EAAKX,SAAS,CAACW,MAAO,gBA3DP,EA+DnBK,YAAc,SAACC,GACb,IAAMC,EAAU,YAAO,EAAKzB,MAAMgB,MAClC,EAAKT,SAAS,CAACS,KAAMS,EAAWC,QAAO,SAAAC,GAAI,OAAIA,EAAKR,KAAOK,QA/D3D,EAAKxB,MAAQ,CACX4B,MAAO,GACP3B,KAAM,GACN4B,IAAK,GACLrB,MAAO,GACPQ,KAAM,GACNE,MAAO,cARQ,E,qDAyBnB,WAAqB,IAAD,OAClBR,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OACR,EAAKN,SAAS,CAACN,KAAMY,IAAO,kBAC1B,EAAKjB,mB,oBAsCb,WAAU,IAAD,OAEP,OACE,qCACA,oBAAIkC,UAAU,cAAd,gDACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,yCAAYC,KAAK/B,MAAMQ,MAAvB,OACA,qBAAKsB,UAAU,UAAf,SACE,qBAAKE,IAAKD,KAAK/B,MAAMC,KAAKC,QAAS+B,IAAI,UAEzC,uBACA,wBAAQC,QAASH,KAAKtB,YAAaqB,UAAU,UAA7C,6BAEF,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,0DACA,wBAAQI,QAASH,KAAKjB,SAAUgB,UAAU,UAA1C,kCAEF,6BACCC,KAAK/B,MAAMgB,KAAKmB,KAAI,SAACR,GAAD,OACnB,mCACA,sBAAKG,UAAU,OAAf,UACE,+BAAmBH,EAAKnB,MAAM,wBAAQsB,UAAU,SAASI,QAAS,kBAAM,EAAKX,YAAYI,EAAKR,KAAhE,iBAArBQ,EAAKR,IACd,wCAAWQ,EAAKT,gC,GA7FZkB,IAAMC,WCExBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12679856.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      data: '',\n      url: '',\n      breed: '',\n      list: [],\n      price: 'Who knows!'\n    }\n  }\n\n  dogBreed = () => {\n    console.log('Breed name');\n    let currentURL = this.state.data.message.slice();\n    let endOfURL = currentURL.slice(30);\n    let middleOfURL = endOfURL.split(\"/\")[0];\n    if (middleOfURL.includes('-')) {\n      let name = middleOfURL.split(\"-\");\n      middleOfURL = name[1] + \" \" + name[0];\n    }\n    console.log(middleOfURL);\n    this.setState({breed: middleOfURL});\n  }\n\n  componentDidMount() {\n    fetch('https://dog.ceo/api/breeds/image/random')\n      .then(response => response.json())\n      .then(json =>\n        this.setState({data: json}, () => \n          this.dogBreed()\n        )\n      );\n  }\n\n  changeDoggo = () => {\n    fetch('https://dog.ceo/api/breeds/image/random')\n      .then(response => response.json())\n      .then(json => \n        this.setState({data: json}, () => \n         this.dogBreed()\n        )\n      )\n  }\n\n  addDoggo = () => {\n    const updatedList = [...this.state.list];\n    \n    const currentDoggo = {\n      breed: this.state.breed,\n      price: this.state.price,\n      id: 1 + Math.random()\n    }\n    this.setState({list: updatedList.concat(currentDoggo)});\n    if (this.state.price === \"Who knows!\") {\n      this.setState({price: \"Hopefully not much!\"});\n    } else if (this.state.price === \"Hopefully not much!\") {\n      this.setState({price: \"We'll find out!\"});\n    } else {\n      this.setState({price: \"Who knows!\"});\n    }\n  }\n\n  deleteDoggo = (x) => {\n    const copiedList = [...this.state.list]\n    this.setState({list: copiedList.filter(item => item.id !== x)});\n  }\n\n  render() {\n\n    return (\n      <>\n      <h1 className=\"text-center\">Thank you to Dog API for the data!</h1>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <h1>It's a {this.state.breed}!</h1>\n          <div className=\"picture\">\n            <img src={this.state.data.message} alt=\"dog\" />\n          </div>\n          <br />\n          <button onClick={this.changeDoggo} className=\"buttons\">Change Doggo</button>\n        </div>\n        <div className=\"col text-center\">\n          <div className=\"titleAndButton\">\n            <h1>List of doggos I want...</h1>\n            <button onClick={this.addDoggo} className=\"buttons\">Add Current Doggo</button>\n          </div>\n          <ul>\n          {this.state.list.map((item) => (\n            <>\n            <div className=\"list\">\n              <li key={item.id}>{item.breed}<button className=\"forDog\" onClick={() => this.deleteDoggo(item.id)}>X</button></li>\n              <p>Price: {item.price}</p>\n            </div>\n            \n            </>\n          ))}\n          </ul>\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}